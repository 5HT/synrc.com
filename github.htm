<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
            "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>
<HEAD>
<TITLE>Voxoz Apps
</TITLE>


  <link rel=stylesheet type="text/css" href="https://synrc.com/synrc.css">
  <meta name="Author" content="5HT">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta property="og:image" content="http://synrc.com/images/s_64.png"/>
  <meta http-equiv="X-UA-Compatible" content="IE=IE10,chrome=1" />
  <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
  </HEAD>
<BODY >
<!--HEVEA command line is: /usr/bin/hevea github.tex -o github.htm -->
<!--HTMLHEAD-->

<div class="nonselectedwrapper white" style="padding: 5 10 0 0;margin: 0 0 -12 0;">
    <a href="https://synrc.com">
    <img style="flat:left; margin-left: 55px; margin-top: 5px; margin-bottom:5px;" src="https://synrc.com/images/synrc.png" border="0"></a>
    <div align=right style="margin: -50px 50px 0px 0px;">
        <script language="JavaScript">

        var args = (window.location).toString().split('/');
        var page_name = args[args.length-1];
        var menu = {//'index.htm':    'home',
                    'https://synrc.com/research.htm': 'showcase',
                    'https://synrc.com/apps/':   'synrc',
                    'http://spawnproc.com':   'spawnproc',
                    'https://synrc.com/feedback.htm': 'contacts'};

        Object.keys(menu).forEach(function (key) {
            if (page_name == key) { document.write('<div class="menu" style="font-weight: bold;">'+menu[key]+'</div>'); }
            else { document.write('<a class="menu" href="'+key+'">'+menu[key]+'</a>'); }
        });

        </script>
    </div>
</div>

<hr size="1">

<!--ENDHTML-->
<!--CUT DEF section 1 --><DIV CLASS="selectedwrapper">
<DIV CLASS="wrapper"><DIV CLASS="block">
<!--TOC section KVS-->
<H2 CLASS="section"><!--SEC ANCHOR -->KVS</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
KVS is Key-Value Storage Data Framework that provide high-level API for handling
social data like Users, Feeds, Comments, etc. It is designed with sequential consistency in mind.</P><P><A HREF="https://synrc.github.io/kvs">synrc.github.io/kvs</A> tag 1.5.0
</P></DIV><DIV CLASS="block">
<!--TOC section N2O-->
<H2 CLASS="section"><!--SEC ANCHOR --><A HREF="https://synrc.com/apps/n2o">N2O</A></H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
Most Powerful Erlang WebSocket Application Server. Server-render and SPA modes.
Extensible WebSocket protocol for JSON, BERT, RAW binary data transfer.
Includes: REST, JavaScript Compiler, Pub/Sub, Sessions, Controls, Templates, etc.</P><P><A HREF="https://5ht.github.io/n2o">5ht.github.io/n2o</A> tag 1.8.0
</P></DIV><DIV CLASS="block">
<!--TOC section SHEN-->
<H2 CLASS="section"><!--SEC ANCHOR -->SHEN</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
JavaScript parse transform allows you to write JavaScript in Erlang and
compile it with erlc. This compiler preserves program semantics closure to closure.</P><P><A HREF="https://synrc.github.io/shen">synrc.github.io/shen</A> tag 1.5.0
</P></DIV><DIV CLASS="block">
<!--TOC section REST-->
<H2 CLASS="section"><!--SEC ANCHOR -->REST</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
REST toolkit that allows you to deal with typed JSON as Erlang records.
It will automatically generates JSON/Records converters for well knwon records.
It is released as standalone micro-REST app that could be used with Cowboy.</P><P><A HREF="https://synrc.github.io/rest">synrc.github.io/rest</A> tag 1.5.0
</P></DIV><DIV CLASS="block">
<!--TOC section MAD-->
<H2 CLASS="section"><!--SEC ANCHOR --><A HREF="https://synrc.com/apps/mad">MAD</A></H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
Mad is Erlang Dependency Manager that aims to be small and fast rebar
replacement which supports rebar.config files, YRL and DTL compilation.</P><P><A HREF="https://synrc.github.io/mad">synrc.github.io/mad</A> tag 0.8
</P></DIV><DIV CLASS="block">
<!--TOC section ACTIVE-->
<H2 CLASS="section"><!--SEC ANCHOR -->ACTIVE</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
Active is sync replacement that uses native FileSystem OS async
listeners to compile and reload Erlang files, DTL templates and other files.
It acts as FS subscriber under supervision and uses MAD under the hood.</P><P><A HREF="https://synrc.github.io/active">synrc.github.io/active</A> tag 0.8
</P></DIV><DIV CLASS="block">
<!--TOC section FS-->
<H2 CLASS="section"><!--SEC ANCHOR -->FS</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
File System listener provides native async way of watching on
file system changes unlike polling in Nitrogen’s sync. It will save
your CPU in production.</P><P><A HREF="https://synrc.github.io/fs">synrc.github.io/fs</A> tag 0.8
</P></DIV><DIV CLASS="block">
<!--TOC section SH-->
<H2 CLASS="section"><!--SEC ANCHOR -->SH</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
Erlang Shell Executor will give you safe access to calling system shell
from erlang and also prevent your erlang processes from leaking on port closing.</P><P><A HREF="https://synrc.github.io/sh">synrc.github.io/sh</A> tag 0.8
</P></DIV><DIV CLASS="block">
<!--TOC section OTP.MK-->
<H2 CLASS="section"><!--SEC ANCHOR -->OTP.MK</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>Tiny Makefile-based Erlang/OTP and reltool/relx/rebar/mix/mad compatible
build solutions. Today otp.mk costs us 52 LOC and orderapps.erl 15 LOC
and we want to keep that size. Consider this as top level Makefile-base
API for Erlang tools.</P><P><A HREF="https://synrc.github.io/otp.mk">synrc.github.io/otp.mk</A> tag 1.5.0
</P></DIV><DIV CLASS="block">
<!--TOC section AVZ-->
<H2 CLASS="section"><!--SEC ANCHOR -->AVZ</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
AVZ provides simple and sane API for JavaScript based and HTTP-redirect
based auth methods like Google, Facebook, Microsoft, Twitter and Github.
It is very tiny, clean and useful for your land pages.</P><P><A HREF="https://synrc.github.io/avz">synrc.github.io/avz</A> tag 1.4.0
</P></DIV><DIV CLASS="block">
<!--TOC section FEEDS-->
<H2 CLASS="section"><!--SEC ANCHOR -->FEEDS</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
Feed Server is node of user workers region. It handles all MQ
requests for write operations for user’s data and other APIs.
Also it acts as distributed cache for user feeds and other list chains.</P><P><A HREF="https://synrc.github.io/feeds/">synrc.github.io/feeds</A>
</P></DIV><DIV CLASS="block">
<!--TOC section MQS-->
<H2 CLASS="section"><!--SEC ANCHOR -->MQS</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
MQS is RabbitMQ client library that handles conections, channels,
subscriptions has its own routing interface that you can use for building
sophisticated subscriptions topology. It also supports RPC over MQ.</P><P><A HREF="https://synrc.github.io/mqs/">synrc.github.io/mqs</A>
</P></DIV><DIV CLASS="block">
<!--TOC section SNMP-->
<H2 CLASS="section"><!--SEC ANCHOR --><A HREF="https://synrc.com/framework/snmp">SNMP</A></H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
In aestetic of HAL 9000 Web Site application to monitor Synrc clusters.
Supports extendable set of plugins to display information. See Showcase for details.
Also look at snmp_agent application that you should embedd in you services.</P><P><A HREF="https://github.com/kakaranet/monitor">framework/snmp</A>
</P></DIV><DIV CLASS="block">
<!--TOC section LDAP-->
<H2 CLASS="section"><!--SEC ANCHOR -->LDAP</H2><!--SEC END --><!--TOC paragraph -->
<H5 CLASS="paragraph"><!--SEC ANCHOR --></H5><!--SEC END --><P>
Directory Server is a distributed storage that can handle tens of
millions online user requests. 
In its core as most of LDAP servers Synrc Directory is based on
key-value distributed data store, DHT.</P><P><A HREF="https://synrc.github.io/ldap/">synrc.github.io/ldap</A>
</P></DIV></DIV>
</DIV><DIV CLASS="clear"> </DIV><DIV CLASS="nonselectedwrapper">
<DIV CLASS="verywidecol"><P><A HREF="../feedback.htm">Contact Us</A>    <A HREF="../labs.htm">Geek Labs</A></P></DIV>
</DIV><!--CUT END -->
<!--HTMLFOOT-->

<div class="nonselectedwrapper">
<div class="verywidecol">

    <div style="width:100%;height:300px;float:left;font-size:14pt;" align=center>
    	<hr size=1>
        <span class="logo_font" style="font-size:14pt;">
            <b><font color="#0033cc">syn</font><font color="#ff0000">rc</font></b></span> uses H<FONT SIZE=1><sup>E</sup></FONT>V<FONT SIZE=1><sup>E</sup></FONT>A<br>
        <a href="http://build.synrc.com/">Сontinuous Integration</a> |
        <a href="https://synrc.com/news">Events</a> |
        <a href="http://voxoz.com">Erlang PaaS</a> |
        <a href="http://synrc.com/music">Music</a><br>
    	<a href="https://synrc.com/privacy.htm">Privacy Policy</a> |
        <a href="https://synrc.com/feedback.htm">Feedback</a> |
        <a href="https://synrc.com/brandbook.htm">Brandbook</a><br>
    	Copyright &copy; 2005&ndash;2013 <a href="https://synrc.com/index.htm"> Synrc Research Center s.r.o.</a>
    </div>

</div>
</div>

<div class="clear"></div>

<script type="text/javascript">

  var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-29227518-1']);
      _gaq.push(['_trackPageview']);
      
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
                    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
                      })();
                      
                      </script>

<script type="text/javascript" src="https://synrc.com/hi.js"></script>
<!--ENDHTML-->
</BODY>
</HTML>
